/*!
 * waffle-grid - v1.2.1 - (https://lucasgruwez.github.io/waffle-grid)
 * Copyright 2017 Lucas Gruwez.
 * Licensed under MIT
 * https://lucasgruwez.github.io/waffle-grid
 */

// Class names
// Change them to whatever you're used to
$grid-classname: "grid" !default;
$row-classname: "row" !default;
$column-classname: "col" !default;

// Column amounts, results in:
// .col-n-of-4, or .col-n-of-8
$grid-columns: (4, 8, 12) !default;

// Column amounts for medium devices
$m-columns: (4, 6, 8) !default;

// Column amounts for small devices
$s-columns: (4, 6) !default;

// Gutter width
$gutter-width: 20px !default;

// Grid width and max-width.
// It is automatically centered on the page.
$grid-width: 960px !default;
$grid-max-width: 80% !default;

// Pushes and Pulls
$pushes: true !default;
$pulls: true !default;

// Breakpoints
$bp-medium: 840px !default;
$bp-small: 480px !default;

// Actual css, change at your own risk

.#{$grid-classname} {
	display: flex;
	flex-direction: column;
	width: $grid-width;
	max-width: $grid-max-width;
	margin: 0 auto;
}

.#{$row-classname} {
	display: flex;
	flex-direction: row;
	width: 100%;
	flex-wrap: wrap;
}

.#{$column-classname} {
  box-sizing: border-box;
  margin: $gutter-width / 2;
  vertical-align: top;
}

.center {margin-left: auto; margin-right: auto;}
.left	  {margin-right: auto;}
.right  {margin-left: auto;}

@each $col-am in $grid-columns {
	@for $i from 1 through $col-am {

		.#{$column-classname}-#{$i}-of-#{$col-am} {
			width: calc(#{percentage($i/$col-am)} - #{$gutter-width});
		} // end width

		@if ($pushes) {
			.push-#{$i}-of-#{$col-am} {
				margin-left: calc(#{percentage($i/$col-am)} + #{$gutter-width} / 2);
			}
		} // end pushes

		@if ($pulls) {
			.pull-#{$i}-of-#{$col-am} {
				margin-right: calc(#{percentage($i/$col-am)} + #{$gutter-width} / 2);
			}
		} // end pulls
	} // end for
} // end each

@media (max-width: $bp-medium) {
	.l-only {display: none;}
	.m-hide {display: none;}

	@each $col-am in $m-columns {
		@for $i from 1 through $col-am {

			.#{$column-classname}-m-#{$i}-of-#{$col-am} {
	      width: calc(#{percentage($i/$col-am)} - #{$gutter-width});
			} // end width

			@if ($pushes) {
	      .push-m-#{$i}-of-#{$col-am} {
	        margin-left: calc(#{percentage($i/$col-am)} + #{$gutter-width} / 2);
	      }
			} // end pushes

			@if ($pulls) {
	      .pull-m-#{$i}-of-#{$col-am} {
	        margin-right: calc(#{percentage($i/$col-am)} + #{$gutter-width} / 2);
	      }
			} // end pulls
		} // end for
	} // end each
}

@media (max-width: $bp-small) {
	.s-hide {display: none;}

	@each $col-am in $s-columns {
		@for $i from 1 through $col-am {

			.#{$column-classname}-s-#{$i}-of-#{$col-am} {
				width: calc(#{percentage($i/$col-am)} - #{$gutter-width});
			} // end width

			@if ($pushes) {
				.push-s-#{$i}-of-#{$col-am} {
					margin-left: calc(#{percentage($i/$col-am)} + #{$gutter-width} / 2);
				}
			} // end pushes

			@if ($pulls) {
				.pull-s-#{$i}-of-#{$col-am} {
					margin-right: calc(#{percentage($i/$col-am)} + #{$gutter-width} / 2);
				}
			} // end pulls
		} // end for
	} // end each
}

@media (min-width: $bp-small) {
	.s-only {display: none;}
	.s-and-lower {display: none;}
}

@media (min-width: $bp-medium) {
	.m-only {display: none;}
	.m-and-lower {display: none;}
}

// under 150 lines !!
